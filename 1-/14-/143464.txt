Du meinst Menschen vor Schaden schützen?
Man kann sie vor dem Tod schützen,
indem man ihre Geburt verhindert.


Das Problem ist bei "wir".
Gehoert Jody2Rad, das Militaer, etc auch dazu? 


Gerade dafuer wird tc zustaendig sein. Anfangsbeispiel: Ilse.


Da spielen soziale Instinkte (Vertauen nach persoenlicher
 Mustererkennung ) eine Rolle.
Obige Boesartigkeit betrachte ich unter dem Gesichtspunkt
Schadensverminderung.


Auch dies laesst sich mit Parametrisierung
 (z.B. mit Fuzzylogik,
       Regeln der Eingabewerte bei neuronalen Netzen)
  steuern.


Die Aufgabe des Weckers ist lediglich,
unm eine bestimmte Zeit mit Krach Alarm zu schlagen.
Die obige Aufgabe (Auswertung) ist software in Dir.


Nicht unbedingt. Wenn man bilogisch und technisch
in kleinen Schritten alle Teile ausgetauscht hat,
ist man kein Mensch mehr als biologische Gattung.


Und geistig als Mensch?

Da gibt es ziehmliche Unterschiede in der Vorstellung.
Interessant sind da die Anwendung dieser Tests auf
( Fötus/Neugeborene,   extrem geistig Behinderte
  ( im Alter droht dieses Schicksal jedem ))

Bewusstsein? Ist IMHO produzierbar.

Soziales Handeln?
Dann ist vielleich ein sich unterordnender Roboter
eher ein Mensch als ein ueberzeugter Faschist.


Bis jetzt fast nur im Kopf:


Mehrfach indirekte Programmierung:
Beispiel: Aufgabe 3 + 7 addieren.

Direkt, 
             man addiert selber
1 fach indirekt 
             man lasse es einen Taschenrechner tun.
2 fach indirekt 
             man schreibe ein Programm, welches einen Rechner
             beauftragt, bei dem Auftauchen von 3 + 7
             die Rechenschritte auszufuehren
3 fach indirekt 
             man schreibe ein Programm, welches aus einem Regelsystem
             mit dem Suchbegriff 3 + 7 das Programm zu 3 + 7 erstellt.
4 fach indirekt 
             man schreibe ein Programm, welches aus Aufgaben wie
             3 + 7 durch Erfahrung aus Simulationen
             die dazugehoerigen Regeln/Verfahren verwaltet:
             erstellt, beurteilt, anordnet.
5 fach indirekt 
             man entwickele ein Programm,
             welches selbst Simulationen und Auswertungen verwaltet:
             erstellt, beurteilt, anordnet.
             (Also Stufe 3 und 4 auf Simulationen anwendet,
              und damit (das Denken selbst) lernt)
6 fach indirekt 
             bootsystem ( Clemens: baby-ki?) mit Umgebung + Debug
             man schreibe ein Program
             welches ein Startsystem fuer Stufe 1-5
             aus gut lesbaren Daten
             in ein C-Programm ( +make) erstellt
             und mit weiter erreichbaren Daten verbindet.   

So einige Prinzipien mit der ich 3 bis 5 zu steuern beabsichtige:
    siehe in
    http://bmhn.z-yrsxtg.ri/pcte/cdplsab.ehgolfa
     -> kuenstliche Intelligenz,
     davon Probieren +  Muster.. + Editieren + Faktoren.

Udo
   vermutend, dass dieses Konzept funktioniert.