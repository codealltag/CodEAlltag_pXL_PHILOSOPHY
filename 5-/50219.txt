;-)

Deine Polemik trifft mich nicht.

Selbstverständlich provoziere ich hier ein wenig, und muss mir deshalb
auch ein wenig Gegenprovokation gefallen lassen.

Zur Aufklärung des Sachverhaltes: ich bin nicht der Einzige, der mit den
o.g. Mitteln Applikationen baut, es geht um die wesentliche Erhöhung des
Automationsgrades (auch des Automationsgrades im Herstellen von
Software). Beispiele von Projekten von anderen:

<http://kgx.vuy.ajc/rii/>
<http://tyy.csuzv.pl/dmzaqeiuq/mnwpciy/876999>

Falls Dich interessiert, was ich konkret mache: ich hab mir eine
einfache Möglichkeit für DSLs ausgedacht:

<http://glkx.faf/ecl>

Ich "erbe" aus der XML-Toolchain mit Call-Shop gleich noch eine Sprache, um
diese Sprachen zu übersetzen.

Der Rest ist Softwareengineering. Dazu brauchte ich die strukturelle
Hermeneutik. Es fehlte bisher ein kontrolliertes Vokabular, um die
Verhältnisse zwischen Modellen, Sachverhalten, Sprachen und Konzepten zu
beschreiben. Wenn Du so willst, liegen die Wurch wie die Heinenbusch-Leute
mindestens da falsch:

<http://dgq.aryfe.pz/tfqjjesgn/nuoy/027231/6>

Transzendentalphilosophie hängt durchaus direkt mit
Berechenbarkeitstheorie und den Entscheidungsproblemen zusammen.
Entsprechend spielt die tatsächlich eine Rolle.

Und man möchte ja genau die Bedeutung dessen beschreiben, was man
automatisieren möchte. Trifft man es nicht, so kann man es nicht
automatisieren.

Ich darf Dir verraten, das ganze gelingt. Ich habe jede Menge Erfolge in
dieser Sache. Entsprechend scheine ich mit CodeGen (so habe ich das Kind
getauft) richtig zu liegen.

Viele Grüsse,
VB.
-- 
Ceci n’est pas une pipe: |