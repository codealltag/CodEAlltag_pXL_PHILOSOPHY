Na ja, du definierst das ad hoc, als Schnellschuss ...


... und meinst, dass das standhalten muss?


Ein paar vorschnelle Schlussfolgerungen.
Und das wars dann?


Ich setze sie nicht gleich. Aber es gibt einige Aspekte, die
abstrakt betrachtet, übereinstimmen.


Also, das was dir als Gestalter vertraut ist, ist der
"typische Gestalter"?

Vielleicht ist auch ein Lehrer ein Gestalter von Unterricht.
Auch ein Komponist ein Gestalter von Musik.

Woher nimmst du die theoretische Grundlage, etwas
normatives auszusagen?


So kann ein Teil eines Gestaltungsprozesses aussehen.

Ich rechne aber damit, dass verschiedene Gestalter, auch eines
Anwendungsbereiches, verschiedene Methoden haben können, ihren
Gestaltungsprozess zu strukturieren.


Warum nicht.


Wenn du wolltest, könntest du das als Muster
   "Top-Down-Gestaltung"
   "Bottom-Up-Gestaltung"
   "Gegenlauf-Gestaltung"
beschreiben.


Der Begriff "Mustertheorie" kommt von mir.

Die Inhalte kommen von Ingolf Karl und ein paar Hundert 
Pionieren in einem Dutzend Anwendungsfelder, die sich relativ wenig
umeinander kümmern.

Die IT-Designpattern-Leute folgen ihren Vorstellungen, ohne sich
mit anderen Anwendungsbreichen abzustimmen. Sehr unlogisch.


Dann nimm den Architekten als Beispiel aus einer Menge von
Gestaltertypen.


Der Qualität der "Lebendigkeit" gegenüber.


Weil die Korrelation beobachtet wurde.


Es geht nicht um diese zwei. Wir haben es mit 15 Struktureigenschaften
zu tun. Ich habe nur zwei (z. B.) als Beispiele genannt.


Ich kenne die Auseinandersetzung, glaube aber nciht, dass
wir das hier aufrollen müssen.


Jeder ist Gestalter, der irgendwelche Artefakte produziert.
In gewisser Weise sind auch wir beide hier als Gestalter,
nämlich eines Dialogs, tätig.


Übersehen ist nicht richtig. Alles an seinem Platz.
Das Thema der Einheit von Form und Funktion ist z. B. ein großes
Thema Karlheinz.


Muster sind wiederverwendbare Problemlösungen, die auf
eine bestimmte Art und Weise beschrieben werden.

Die Mustertheorie dient u.a. der Erhöhung der Effizienz von
Gestaltungsprozessen.


Jemand der eine Programmiersprachsyntax lernt, ist die interne
Implementierung unerheblich. Es geht für ihn darum, welche
sprachlichen Ausdrucksmöglichkeiten er vorfindet.


Schau bitte in der Jägerbekk unter Kybernetik nach.

< Was macht sie vollständig?

Wenn alle unter den Musterlogiken aufgeführten Punkte
beschrieben wurden.


Du solltest dich vor abstrusen Schlussfolgerungen hüten.


Von Informationsmenge ja. Von Entropie im physikalischen Sinne nein.


Nein, du hast, obwohl du das Instrumentarium des Phasenraumes kennst,
keinerlei Vorstellung was Entropie physikalisch ist.


In der frühen Phase des Universums gab es, soweit "state of the art"
keine Atome oder Moleküle. Jetzt gibt es diese Strukturen.
Es gab auch keine Computer, jetzt gibt es sie.


Das kommt darauf an, wie man "Leben" definiert.


Das sind Haarspaltereien.


Warum soll ich dir das übel nehmen.

Andererseits ist deine Herangehensweise selbst-destruktiv.

Es ist als würdest du zu einem Gitarrenlehrer geht, um zu verstehen,
wie man mit einer Gitarre spielt und Musik macht. Und statt ihm
zuzuhören, würdest du verlangen, dass er "Gitarre" definiert.
Und wenn er sagt, du sollst versuchen einen Ton anzuschlagen,
würdest du anworten, dass du "Ton" nur als Material für Geschirr
kennst und du das "schlagen" erstens als Gewalt ablehnst und
zweitens sinnlos findest, weil Ton dabei nur kaputt gehen kann.
Mithin wäre alles, was er sagt, für dich schwer verständlich.

Wenn du dich für Mustertheorie nicht interessierst, obwohl es
ein potentes Werkzeug für Modellierung ist, und obwohl deine
IT-Kollegen die OO-Komplexität nicht ohne Muster bewältigen
könnten, dann ist das deine Sache.

Abe sage nicht, dass du dich irgendwie informiert hättest
und dich dann nicht hättest anfreunden können.

lg Darius